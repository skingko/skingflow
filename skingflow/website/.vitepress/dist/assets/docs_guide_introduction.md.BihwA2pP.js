import{_ as n,c as a,o as t,ae as s}from"./chunks/framework.BD_Yrv4e.js";const u=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/introduction.md","filePath":"docs/guide/introduction.md"}'),i={name:"docs/guide/introduction.md"};function o(l,e,r,c,p,g){return t(),a("div",null,[...e[0]||(e[0]=[s(`<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>SkinFlow is a flexible flow engine for intelligent multi-agent applications that supports complex task decomposition, intelligent planning, memory management, and tool integration.</p><h2 id="what-is-skinflow" tabindex="-1">What is SkinFlow? <a class="header-anchor" href="#what-is-skinflow" aria-label="Permalink to &quot;What is SkinFlow?&quot;">​</a></h2><p>SkinFlow is designed to provide developers with a powerful framework for building sophisticated AI applications that can:</p><ul><li><strong>Decompose complex tasks</strong> automatically into manageable subtasks</li><li><strong>Coordinate multiple specialized agents</strong> to work together efficiently</li><li><strong>Maintain context and memory</strong> across interactions</li><li><strong>Integrate various tools</strong> and APIs seamlessly</li><li><strong>Process information in real-time</strong> with streaming capabilities</li></ul><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="🧠-intelligent-multi-agent-system" tabindex="-1">🧠 Intelligent Multi-Agent System <a class="header-anchor" href="#🧠-intelligent-multi-agent-system" aria-label="Permalink to &quot;🧠 Intelligent Multi-Agent System&quot;">​</a></h3><ul><li><strong>Planning Agent</strong>: Automatically breaks down complex tasks and creates execution plans</li><li><strong>Professional Sub-Agents</strong>: Specialized in research, programming, data analysis, content creation</li><li><strong>Intelligent Coordination</strong>: Automatically selects the most suitable agents for specific tasks</li><li><strong>Context Isolation</strong>: Ensures secure collaboration between agents</li></ul><h3 id="💾-advanced-memory-system" tabindex="-1">💾 Advanced Memory System <a class="header-anchor" href="#💾-advanced-memory-system" aria-label="Permalink to &quot;💾 Advanced Memory System&quot;">​</a></h3><ul><li><strong>Short-term Memory</strong>: Session context and temporary information management</li><li><strong>Long-term Memory</strong>: Persistent knowledge storage and historical records</li><li><strong>User Preferences</strong>: Personalized settings and habit learning</li><li><strong>Semantic Search</strong>: Vector-based intelligent memory retrieval</li></ul><h3 id="🛠️-unified-tool-system" tabindex="-1">🛠️ Unified Tool System <a class="header-anchor" href="#🛠️-unified-tool-system" aria-label="Permalink to &quot;🛠️ Unified Tool System&quot;">​</a></h3><ul><li><strong>YAML/XML Tool Definitions</strong>: Declarative tool configuration, easy to extend</li><li><strong>Virtual File System</strong>: Secure file operation environment</li><li><strong>MCP Protocol Support</strong>: Standardized tool integration</li><li><strong>Custom Tools</strong>: Flexible tool development and integration mechanism</li></ul><h3 id="🔄-stream-processing-engine" tabindex="-1">🔄 Stream Processing Engine <a class="header-anchor" href="#🔄-stream-processing-engine" aria-label="Permalink to &quot;🔄 Stream Processing Engine&quot;">​</a></h3><ul><li><strong>Asynchronous Stream Processing</strong>: High-performance concurrent execution</li><li><strong>Real-time Response</strong>: Supports streaming output and real-time feedback</li><li><strong>Workflow Orchestration</strong>: Intelligent management of complex workflows</li></ul><h3 id="🛡️-enterprise-grade-reliability" tabindex="-1">🛡️ Enterprise-Grade Reliability <a class="header-anchor" href="#🛡️-enterprise-grade-reliability" aria-label="Permalink to &quot;🛡️ Enterprise-Grade Reliability&quot;">​</a></h3><ul><li><strong>Degradation Mechanism</strong>: Multi-layer error recovery strategies</li><li><strong>Circuit Breaker</strong>: Automatic fault isolation and recovery</li><li><strong>Health Monitoring</strong>: Real-time system status tracking</li><li><strong>Detailed Logging</strong>: Complete debugging and audit information</li></ul><h2 id="who-should-use-skinflow" tabindex="-1">Who Should Use SkinFlow? <a class="header-anchor" href="#who-should-use-skinflow" aria-label="Permalink to &quot;Who Should Use SkinFlow?&quot;">​</a></h2><p>SkinFlow is designed for developers and organizations that need to:</p><ul><li><strong>Build intelligent assistants</strong> and chatbots</li><li><strong>Create automated workflow systems</strong></li><li><strong>Develop content generation applications</strong></li><li><strong>Implement data analysis pipelines</strong></li><li><strong>Construct multi-agent AI systems</strong></li></ul><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│                    SkinFlow Framework                        │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│  Multi-Agent System                                         │</span></span>
<span class="line"><span>│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐         │</span></span>
<span class="line"><span>│  │ Planning    │  │ Sub-Agents  │  │ Coordination│         │</span></span>
<span class="line"><span>│  │ Agent       │  │ Manager     │  │ System      │         │</span></span>
<span class="line"><span>│  └─────────────┘  └─────────────┘  └─────────────┘         │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│  Core Services                                              │</span></span>
<span class="line"><span>│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐         │</span></span>
<span class="line"><span>│  │ LLM         │  │ Memory      │  │ Tool        │         │</span></span>
<span class="line"><span>│  │ Abstraction │  │ System      │  │ Registry    │         │</span></span>
<span class="line"><span>│  └─────────────┘  └─────────────┘  └─────────────┘         │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│  Infrastructure                                             │</span></span>
<span class="line"><span>│  ┌─────────────┐  ┌─────────────┐  ┌─────────────┐         │</span></span>
<span class="line"><span>│  │ Fallback    │  │ Virtual     │  │ Stream      │         │</span></span>
<span class="line"><span>│  │ Manager     │  │ FileSystem  │  │ Engine      │         │</span></span>
<span class="line"><span>│  └─────────────┘  └─────────────┘  └─────────────┘         │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────────────────┘</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="./getting-started.html">Getting Started</a> - Learn how to install and set up SkinFlow</li><li><a href="./core-features.html">Core Features</a> - Explore the main capabilities</li><li><a href="./architecture.html">Architecture</a> - Understand the system design</li><li><a href="./../../examples/">Examples</a> - See practical implementations</li></ul><h2 id="community" tabindex="-1">Community <a class="header-anchor" href="#community" aria-label="Permalink to &quot;Community&quot;">​</a></h2><ul><li><strong>GitHub Issues</strong>: Report bugs and request features</li><li><strong>GitHub Discussions</strong>: Join community discussions</li><li><strong>Documentation</strong>: Complete documentation and guides</li></ul><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>SkinFlow is released under the MIT License. See the LICENSE file for details.</p>`,27)])])}const m=n(i,[["render",o]]);export{u as __pageData,m as default};
