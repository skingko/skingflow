name: Deploy Documentation to Cloudflare Pages

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'skingflow/website/package-lock.json'

      - name: Install dependencies
        working-directory: ./skingflow/website
        run: npm ci

      - name: Build documentation
        working-directory: ./skingflow/website
        run: |
          npm run build
        env:
          NODE_OPTIONS: --no-warnings

      - name: Install Wrangler
        run: |
          npm install -g wrangler
          wrangler --version

      - name: Configure Wrangler
        run: |
          # Set up wrangler configuration
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV

      - name: Create or verify Pages project
        run: |
          # Check if project exists, create if it doesn't
          echo "Checking if Pages project exists..."
          if ! wrangler pages project list 2>/dev/null | grep -q "skingflow-docs"; then
            echo "Creating Pages project: skingflow-docs"
            wrangler pages project create skingflow-docs --production-branch=main || echo "Project creation failed, attempting to continue with deployment"
          else
            echo "Pages project skingflow-docs already exists"
          fi

      - name: Deploy to Cloudflare Pages (Wrangler)
        run: |
          # Deploy with explicit commit message and dirty commit handling
          echo "Starting deployment to Cloudflare Pages using Wrangler..."

          # Generate deployment info
          COMMIT_SHA="${GITHUB_SHA::7}"
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          DEPLOY_MESSAGE="Docs: Update from ${BRANCH_NAME} (${COMMIT_SHA})"

          echo "Deployment info:"
          echo "  Branch: ${BRANCH_NAME}"
          echo "  Commit: ${COMMIT_SHA}"
          echo "  Message: ${DEPLOY_MESSAGE}"

          # Deploy with explicit parameters
          if wrangler pages deploy ./skingflow/website/.vitepress/dist \
            --project-name=skingflow-docs \
            --branch=main \
            --commit-dirty=true \
            --commit-message="${DEPLOY_MESSAGE}"; then
            echo "✅ Wrangler deployment successful!"
          else
            echo "❌ Wrangler deployment failed"
            exit 1
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          NODE_OPTIONS: --max-old-space-size=4096
        continue-on-error: true

      - name: Deploy to Cloudflare Pages (Fallback)
        uses: cloudflare/pages-action@v1
        if: failure()
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: skingflow-docs
          directory: ./skingflow/website/.vitepress/dist
          branch: main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}